openapi: 3.0.0
info:
  version: 1.0.0
  title: API Digital Handbook 2023
  description: API Documentation for Digital Handbook 2023
servers:
  - url: http://localhost:9001
    description: API Local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    Page:
      name: page
      in: query
      description: "Page number for pagination (default: 1)"
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: "Number of items to return per page (default: 10)"
      schema:
        type: integer

  responses:
    "200":
      description: OK
    "400":
      description: "Bad Request"
    "401":
      description: Unauthorized

security:
  - bearerAuth: []

paths:
  /login:
    post:
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /auth-me:
    get:
      tags:
        - Authentication
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /logout:
    delete:
      tags:
        - Authentication
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /data:
    post:
      tags:
        - Decrypt Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /users:
    post:
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                password:
                  type: string
                id_role:
                  type: integer
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    get:
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        - in: query
          name: username
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    delete:
      tags:
        - Users
      parameters:
        - in: query
          name: username
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
  /cors:
    post:
      tags:
        - Cors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    get:
      tags:
        - Cors
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        - in: query
          name: domain
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    delete:
      tags:
        - Cors
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /role:
    get:
      tags:
        - Role
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        - in: query
          name: role
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /logs:
    get:
      tags:
        - Logs
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        - in: query
          name: message
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /upload-files:
    post:
      tags:
        - Uploud
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  format: binary
                path:
                  type: string
                  # format: binary
      responses:
        "200":
          description: File uploaded successfully

  /read-file:
    get:
      tags:
        - Read File
      parameters:
        - in: query
          name: directory
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

  /files:
    post:
      tags:
        - Files
      parameters:
        - in: query
          name: id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                alias_name:
                  type: string
                plant_code:
                  type: string
                parent_uid:
                  type: string
                path:
                  type: string
                types:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    get:
      tags:
        - Files
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: plant_code
          schema:
            type: string
        - in: query
          name: types
          schema:
            type: string
        - in: query
          name: parent_uid
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"

    delete:
      tags:
        - Files
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
